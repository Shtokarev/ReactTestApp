# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Fullstack CI/CD Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Create .env file
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV_FILE" > .env

        # shell: bash
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn install --frozen-lockfile

      - name: Run build
        run: yarn build

      - name: Create .ssh files
        env:
          DEPLOY_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -p $DEPLOY_PORT $DEPLOY_HOST >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Copy bundle
        env:
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_USER_HOST: ${{ secrets.DEPLOY_USER_HOST }}
        run: |
          ssh -p $DEPLOY_PORT $DEPLOY_USER_HOST "rm -rf /usr/share/nginx/_tmp"
          ssh -p $DEPLOY_PORT $DEPLOY_USER_HOST "rm -rf /usr/share/nginx/_old"
          ssh -p $DEPLOY_PORT $DEPLOY_USER_HOST "mkdir /usr/share/nginx/_tmp"
          scp -P $DEPLOY_PORT -r ./build/* $DEPLOY_USER_HOST:/usr/share/nginx/_tmp/
          ssh -p $DEPLOY_PORT $DEPLOY_USER_HOST "mv /usr/share/nginx/fullstack/ /usr/share/nginx/_old/ && mv /usr/share/nginx/_tmp/ /usr/share/nginx/fullstack"
          ssh -p $DEPLOY_PORT $DEPLOY_USER_HOST "rm -rf /usr/share/nginx/_tmp"
